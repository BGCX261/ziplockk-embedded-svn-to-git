#include <inttypes.h>
#include <avr/io.h>
#include <avr/pgmspace.h>
#include <avr/eeprom.h>
#include <avr/interrupt.h>
#include <avr/signal.h>

#define F_CPU 8000000
#define BAUD_RATE 19200

#define T0RELOAD -100

volatile uint8_t state=0;

// external interrupt pin
SIGNAL(SIG_INTERRUPT0)
{
}

//timer 0 overflow
SIGNAL(SIG_OVERFLOW0)
{
	TCNT0 = (uint8_t) T0RELOAD; // reload

	if(state)
	{
		PORTC|=0x01;
		state=0;
	}
	else
	{
		PORTC&=0xfe;
		state++;
	}
}

int main(void)
{
	//
	// init IO ports
	//
	DDRD=0x00;	// all inputs
	DDRC=0xff;	// all inputs
	DDRB=0x00;	// all inputs

	PORTC=0x00;

	TCCR0 = 5; // ck/1024
	TCNT0 = (uint8_t) T0RELOAD; // reload
	TIMSK |= (1<<TOIE0); // enable overflow interrupt


	//
	// init global variables
	//

	//
	// enable global interrupts
	//
	sei();

	//
	// let loose
	//
	while (1)
	{
	}
}


