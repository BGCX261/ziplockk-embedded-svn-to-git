
tinytest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000dc  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000dc  00000170  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000170  2**0
                  ALLOC
  3 .noinit       00000000  00800062  00800062  00000170  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  00000170  2**0
                  CONTENTS
  5 .stab         00000354  00000000  00000000  00000170  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00000084  00000000  00000000  000004c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000014  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 00000051  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00000116  00000000  00000000  000005ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000007b  00000000  00000000  000006c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00000145  00000000  00000000  0000073e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000000a8  00000000  00000000  00000883  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0b c0       	rjmp	.+22     	; 0x18 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__vector_1>
   4:	22 c0       	rjmp	.+68     	; 0x4a <__bad_interrupt>
   6:	21 c0       	rjmp	.+66     	; 0x4a <__bad_interrupt>
   8:	20 c0       	rjmp	.+64     	; 0x4a <__bad_interrupt>
   a:	1f c0       	rjmp	.+62     	; 0x4a <__bad_interrupt>
   c:	2b c0       	rjmp	.+86     	; 0x64 <__vector_6>
   e:	1d c0       	rjmp	.+58     	; 0x4a <__bad_interrupt>
  10:	1c c0       	rjmp	.+56     	; 0x4a <__bad_interrupt>
  12:	1b c0       	rjmp	.+54     	; 0x4a <__bad_interrupt>
  14:	1a c0       	rjmp	.+52     	; 0x4a <__bad_interrupt>
  16:	19 c0       	rjmp	.+50     	; 0x4a <__bad_interrupt>

00000018 <__ctors_end>:
  18:	11 24       	eor	r1, r1
  1a:	1f be       	out	0x3f, r1	; 63
  1c:	cf ed       	ldi	r28, 0xDF	; 223
  1e:	cd bf       	out	0x3d, r28	; 61

00000020 <__do_copy_data>:
  20:	10 e0       	ldi	r17, 0x00	; 0
  22:	a0 e6       	ldi	r26, 0x60	; 96
  24:	b0 e0       	ldi	r27, 0x00	; 0
  26:	ec ed       	ldi	r30, 0xDC	; 220
  28:	f0 e0       	ldi	r31, 0x00	; 0
  2a:	03 c0       	rjmp	.+6      	; 0x32 <.do_copy_data_start>

0000002c <.do_copy_data_loop>:
  2c:	c8 95       	lpm
  2e:	31 96       	adiw	r30, 0x01	; 1
  30:	0d 92       	st	X+, r0

00000032 <.do_copy_data_start>:
  32:	a0 36       	cpi	r26, 0x60	; 96
  34:	b1 07       	cpc	r27, r17
  36:	d1 f7       	brne	.-12     	; 0x2c <.do_copy_data_loop>

00000038 <__do_clear_bss>:
  38:	10 e0       	ldi	r17, 0x00	; 0
  3a:	a0 e6       	ldi	r26, 0x60	; 96
  3c:	b0 e0       	ldi	r27, 0x00	; 0
  3e:	01 c0       	rjmp	.+2      	; 0x42 <.do_clear_bss_start>

00000040 <.do_clear_bss_loop>:
  40:	1d 92       	st	X+, r1

00000042 <.do_clear_bss_start>:
  42:	a2 36       	cpi	r26, 0x62	; 98
  44:	b1 07       	cpc	r27, r17
  46:	e1 f7       	brne	.-8      	; 0x40 <.do_clear_bss_loop>
  48:	38 c0       	rjmp	.+112    	; 0xba <main>

0000004a <__bad_interrupt>:
  4a:	da cf       	rjmp	.-76     	; 0x0 <__vectors>

0000004c <__vector_1>:
volatile uint8_t failcount=0;

// external interrupt pin
SIGNAL(SIG_INTERRUPT0)
{
  4c:	1f 92       	push	r1
  4e:	0f 92       	push	r0
  50:	0f b6       	in	r0, 0x3f	; 63
  52:	0f 92       	push	r0
  54:	11 24       	eor	r1, r1
	failcount=0;
  56:	10 92 60 00 	sts	0x0060, r1
  5a:	0f 90       	pop	r0
  5c:	0f be       	out	0x3f, r0	; 63
  5e:	0f 90       	pop	r0
  60:	1f 90       	pop	r1
  62:	18 95       	reti

00000064 <__vector_6>:
}

//timer 0 overflow
SIGNAL(SIG_OVERFLOW0)
{
  64:	1f 92       	push	r1
  66:	0f 92       	push	r0
  68:	0f b6       	in	r0, 0x3f	; 63
  6a:	0f 92       	push	r0
  6c:	11 24       	eor	r1, r1
  6e:	8f 93       	push	r24
	TCNT0 = (uint8_t) T0RELOAD;	// reload
  70:	8c e9       	ldi	r24, 0x9C	; 156
  72:	82 bf       	out	0x32, r24	; 50

	if(state)
  74:	80 91 61 00 	lds	r24, 0x0061
  78:	88 23       	and	r24, r24
  7a:	a1 f0       	breq	.+40     	; 0xa4 <__vector_6+0x40>
	{
		PORTA|=0x01;
  7c:	d8 9a       	sbi	0x1b, 0	; 27
		state=0;
  7e:	10 92 61 00 	sts	0x0061, r1
	}	
	else
	{
		PORTA&=0xfe;
		state=1;
	}

	if(failcount<FAILTIME)
  82:	80 91 60 00 	lds	r24, 0x0060
  86:	84 31       	cpi	r24, 0x14	; 20
  88:	38 f4       	brcc	.+14     	; 0x98 <__vector_6+0x34>
	{
		failcount++;
  8a:	80 91 60 00 	lds	r24, 0x0060
  8e:	8f 5f       	subi	r24, 0xFF	; 255
  90:	80 93 60 00 	sts	0x0060, r24
		PORTA&=0xfd;
	}
	else
	{
		if(state)
		{
			PORTA|=0x02;
		}
		else
		{
			PORTA&=0xfd;
  94:	d9 98       	cbi	0x1b, 1	; 27
  96:	0b c0       	rjmp	.+22     	; 0xae <__vector_6+0x4a>
  98:	80 91 61 00 	lds	r24, 0x0061
  9c:	88 23       	and	r24, r24
  9e:	d1 f3       	breq	.-12     	; 0x94 <__vector_6+0x30>
  a0:	d9 9a       	sbi	0x1b, 1	; 27
  a2:	05 c0       	rjmp	.+10     	; 0xae <__vector_6+0x4a>
  a4:	d8 98       	cbi	0x1b, 0	; 27
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	80 93 61 00 	sts	0x0061, r24
  ac:	ea cf       	rjmp	.-44     	; 0x82 <__vector_6+0x1e>
  ae:	8f 91       	pop	r24
  b0:	0f 90       	pop	r0
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	0f 90       	pop	r0
  b6:	1f 90       	pop	r1
  b8:	18 95       	reti

000000ba <main>:
		}
	}
}

int main(void)
{
  ba:	cf ed       	ldi	r28, 0xDF	; 223
  bc:	d0 e0       	ldi	r29, 0x00	; 0
  be:	de bf       	out	0x3e, r29	; 62
  c0:	cd bf       	out	0x3d, r28	; 61
	//
	// init IO ports
	//
	DDRA=0xFF;	// all outputs
  c2:	8f ef       	ldi	r24, 0xFF	; 255
  c4:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x01;	// all off
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	8b bb       	out	0x1b, r24	; 27

	TCCR0 = 5; // ck/1024
  ca:	85 e0       	ldi	r24, 0x05	; 5
  cc:	83 bf       	out	0x33, r24	; 51
	TCNT0 = (uint8_t) T0RELOAD;	// reload
  ce:	8c e9       	ldi	r24, 0x9C	; 156
  d0:	82 bf       	out	0x32, r24	; 50
	TIMSK |= (1<<TOIE0); // enable overflow interrupt
  d2:	89 b7       	in	r24, 0x39	; 57
  d4:	82 60       	ori	r24, 0x02	; 2
  d6:	89 bf       	out	0x39, r24	; 57


	//
	// init global variables
	//

	//
	// enable global interrupts
	//
	sei();
  d8:	78 94       	sei
  da:	ff cf       	rjmp	.-2      	; 0xda <main+0x20>
